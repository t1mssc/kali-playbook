---
- name: Create download directory
  file:
    path: "{{ download_dir }}"
    state: directory
    mode: "0755"
  # become: true

- name: Get latest release information from GitHub API
  uri:
    url: "{{ github_api_url }}"
    method: GET
    return_content: yes
    status_code: 200
  register: release_info

- name: Parse release information
  set_fact:
    latest_tag: "{{ release_info.json.tag_name }}"
    release_assets: "{{ release_info.json.assets }}"

- name: Display latest release version
  debug:
    msg: "Latest PEASS-ng release: {{ latest_tag }}"

- name: Find LinPEAS download URL
  set_fact:
    linpeas_url: "{{ item.browser_download_url }}"
  when: "'linpeas.sh' in item.name"
  loop: "{{ release_assets }}"

- name: Find WinPEAS executable download URL
  set_fact:
    winpeas_exe_url: "{{ item.browser_download_url }}"
  when: "'winPEASx64.exe' in item.name"
  loop: "{{ release_assets }}"

- name: Find WinPEAS batch script download URL
  set_fact:
    winpeas_bat_url: "{{ item.browser_download_url }}"
  when: "'winPEAS.bat' in item.name"
  loop: "{{ release_assets }}"

- name: Check if LinPEAS already exists and get version
  stat:
    path: "{{ download_dir }}/linpeas.sh"
  register: linpeas_stat

- name: Check if WinPEAS exe already exists
  stat:
    path: "{{ download_dir }}/winPEASx64.exe"
  register: winpeas_exe_stat

- name: Check if WinPEAS bat already exists
  stat:
    path: "{{ download_dir }}/winPEAS.bat"
  register: winpeas_bat_stat

- name: Create version tracking file directory
  file:
    path: "{{ download_dir }}/.version"
    state: directory
    mode: "0755"
  # become: true

- name: Check current installed version
  slurp:
    src: "{{ download_dir }}/.version/current_version.txt"
  register: current_version_file
  ignore_errors: yes

- name: Set current version variable
  set_fact:
    current_version: "{{ current_version_file.content | b64decode | trim }}"
  when: current_version_file is succeeded

- name: Set current version to empty if file doesn't exist
  set_fact:
    current_version: ""
  when: current_version_file is failed

- name: Download LinPEAS if new version available or missing
  get_url:
    url: "{{ linpeas_url }}"
    dest: "{{ download_dir }}/linpeas.sh"
    mode: "0755"
    force: yes
  # become: true
  when: linpeas_url is defined and (not linpeas_stat.stat.exists or current_version != latest_tag)

- name: Download WinPEAS executable if new version available or missing
  get_url:
    url: "{{ winpeas_exe_url }}"
    dest: "{{ download_dir }}/winPEASx64.exe"
    mode: "0755"
    force: yes
  # become: true
  when: winpeas_exe_url is defined and (not winpeas_exe_stat.stat.exists or current_version != latest_tag)

- name: Download WinPEAS batch script if new version available or missing
  get_url:
    url: "{{ winpeas_bat_url }}"
    dest: "{{ download_dir }}/winPEAS.bat"
    mode: "0755"
    force: yes
  # become: true
  when: winpeas_bat_url is defined and (not winpeas_bat_stat.stat.exists or current_version != latest_tag)

- name: Update version tracking file
  copy:
    content: "{{ latest_tag }}"
    dest: "{{ download_dir }}/.version/current_version.txt"
    mode: "0644"
  # become: true
  when: current_version != latest_tag

- name: Create symbolic links in /usr/local/bin (requires sudo)
  file:
    src: "{{ download_dir }}/linpeas.sh"
    dest: "/usr/local/bin/linpeas"
    state: link
    force: yes
  # become: true
  when: linpeas_url is defined
  ignore_errors: yes

- name: Display download summary
  debug:
    msg: |
      PEAS Tools Download Summary:
      ============================
      Download Directory: {{ download_dir }}
      Latest Version: {{ latest_tag }}
      Previous Version: {{ current_version | default('None') }}

      Downloaded Files:
      - LinPEAS: {{ download_dir }}/linpeas.sh
      - WinPEAS (exe): {{ download_dir }}/winPEASx64.exe
      - WinPEAS (bat): {{ download_dir }}/winPEAS.bat

      Usage:
      - Run LinPEAS: {{ download_dir }}/linpeas.sh
      - Run WinPEAS: {{ download_dir }}/winPEASx64.exe
      - Symbolic link: linpeas (if sudo access available)

- name: Set file permissions for all PEAS files
  file:
    path: "{{ item }}"
    mode: "0755"
    state: file
  # become: true
  loop:
    - "{{ download_dir }}/linpeas.sh"
    - "{{ download_dir }}/winPEASx64.exe"
    - "{{ download_dir }}/winPEAS.bat"
  ignore_errors: yes

- name: Create quick reference file
  copy:
    content: |
      PEAS Tools Quick Reference
      =========================
      Version: {{ latest_tag }}
      Download Date: {{ ansible_date_time.iso8601 }}

      LinPEAS (Linux/Unix):
      - File: {{ download_dir }}/linpeas.sh
      - Usage: ./linpeas.sh
      - Description: Linux Privilege Escalation Awesome Script

      WinPEAS (Windows):
      - Executable: {{ download_dir }}/winPEASx64.exe
      - Batch Script: {{ download_dir }}/winPEAS.bat
      - Usage: winPEASx64.exe or winPEAS.bat
      - Description: Windows Privilege Escalation Awesome Scripts

      To update, simply run this playbook again.
    dest: "{{ download_dir }}/README.txt"
    mode: "0644"
  # become: true